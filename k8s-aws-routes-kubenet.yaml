apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-aws-routes-kubenet
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: k8s-aws-routes-kubenet
  namespace: kube-system
rules:
  - apiGroups: [""]
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups: [""]
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups: [""]
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: k8s-aws-routes-kubenet
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8s-aws-routes-kubenet
subjects:
- kind: ServiceAccount
  name: k8s-aws-routes-kubenet
  namespace: kube-system
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    k8s-app: k8s-aws-routes-kubenet
    role.kubernetes.io/networking: "1"
    kubernetes.io/cluster-service: "true"
  name: k8s-aws-routes-kubenet
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: k8s-aws-routes-kubenet
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
        scheduler.alpha.kubernetes.io/tolerations: '[{"key":"CriticalAddonsOnly", "operator":"Exists"}]'
      labels:
        k8s-app: k8s-aws-routes-kubenet
        role.kubernetes.io/networking: "1"
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccountName: k8s-aws-routes-kubenet
      containers:
      - name: k8s-aws-routes-kubenet
        image: reubit/k8s-aws-routes-kubenet:latest
        env:
        - name: K8S_AWS_ROUTES_INTERVAL
          value: "30"
        - name: AWS_DEFAULT_REGION
          value: "us-west-2"
        imagePullPolicy: "Always"
        resources:
          limits:
            memory: 100Mi
            cpu: 100m
          requests:
            cpu: 50m
            memory: 50Mi
      dnsPolicy: ClusterFirst
      hostNetwork: true
      restartPolicy: Always
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - key: CriticalAddonsOnly
        operator: Exists
